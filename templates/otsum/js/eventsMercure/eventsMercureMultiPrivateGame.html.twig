<script>
    //--- EVENTS MERCURE ---//
    // Si l'utilisateur est connecté
    {% if app.user %}
        //--- TOPICS INSCRIPTIONS ---//
        // Url mercure server
        const url = new URL('http://localhost:3000/.well-known/mercure')
        // Topic joining private game
        url.searchParams.append('topic', '/joiningPrivateGame/' + {{ idGame }})
        url.searchParams.append('topic', '/checkPresenceOfAllPlayers/' + {{ idGame }})
        url.searchParams.append('topic', '/startChrono/' + {{ idGame }})
        url.searchParams.append('topic', '/retrieveChrono/' + {{ idGame }} + '/' + {{ app.user.id }})
        url.searchParams.append('topic', '/displayNewLine/' + {{ idGame }})
        url.searchParams.append('topic', '/currentKey/' + {{ idGame }})

        //--- LISTENING FOR MERCURE EVENTS ---//
        const eventSource = new EventSource(url)
        eventSource.onmessage = (e) =>{
            // joining private game
            if (JSON.parse(e.data).topic === '/joiningPrivateGame/' + {{ idGame }}) {
                console.log('[EVENT] joiningPrivateGame}');
                let idPlayer = JSON.parse(e.data).idPlayer;
                let userAvatarBox = $(`[data-idUser='${idPlayer}']`).find('.avatarBox');
                if (userAvatarBox.hasClass('absent')) {
                    userAvatarBox.removeClass('absent');
                    userAvatarBox.find('.absent').remove();
                }
            }
            // checking the presence of all the players
            if (JSON.parse(e.data).topic === '/checkPresenceOfAllPlayers/' + {{ idGame }}) {
                console.log('[EVENT] checkPresenceOfAllPlayers}');
                creationDeLaGrille("{{ firstLetter }}", {{ difficulty }});
            }
            // start chrono
            if (JSON.parse(e.data).topic === '/startChrono/' + {{ idGame }}) {
                console.log('[EVENT] startChrono}');
                simplyCountDownStart(
                    JSON.parse(e.data).arrayChrono,
                    JSON.parse(e.data).currentPlayer
                );
            }
            // retrieve chrono
            if (JSON.parse(e.data).topic === '/retrieveChrono/'+ {{ idGame }} + '/' + {{ app.user.id }}) {
                console.log('[EVENT] retrieveChrono}');
                simplyCountDownStart(
                    JSON.parse(e.data).arrayChrono,
                    JSON.parse(e.data).currentPlayer
                );
            }

            // display new line
            if (JSON.parse(e.data).topic === '/displayNewLine/' + {{ idGame }}) {
                console.log('[EVENT] displayNewLine}');
                $('.currentTeam').removeClass('currentTeam');
                $('.multiPrivateGame .' + JSON.parse(e.data).actualTeam).addClass('currentTeam');
                if(JSON.parse(e.data).actualPlayer === {{ app.user.id }}){
                    if(JSON.parse(e.data).chronoType === true){
                        // Start chrono
                        $.ajax({
                            method: "POST",
                            url: "{{ path('startChrono') }}",
                            data: {
                                idGame: {{ idGame }},
                                restart: true
                            }
                        })
                    }
                    if (JSON.parse(e.data).lineUpdated.victory === true) {
                        console.log('GAGNE !!');
                        $('#div_keyboard').empty();
                        $('#div_keyboard').append("<div id='keyboard'></div");
                        $('.currentTeam').addClass('end');

                    } else {
                        // Création du clavier
                        $('#div_keyboard #keyboard').jkeyboard({
                            input: $('#search_field'),
                            layout: 'azerty',
                        });
                    }
                } else {
                    $('#div_keyboard').empty();
                    $('#div_keyboard').append("<div id='keyboard'></div");
                    if (JSON.parse(e.data).lineUpdated.victory === true) {
                        console.log('PERDU ..');
                        $('.currentTeam').addClass('end');
                    }
                }
                displayActualGrid();
            }
            // display currentKey
            if (JSON.parse(e.data).topic === '/currentKey/' + {{ idGame }}) {
                console.log('[EVENT] currentKey}');
                if(
                    JSON.parse(e.data).actualPlayer !== {{ app.user.id }} &&
                    JSON.parse(e.data).currentKey &&
                    JSON.parse(e.data).currentKey !== "enter"
                ){
                    let current_cell = $('.current_cell').first();
                    let last_cell = $('.last_cell').first();
                    if(JSON.parse(e.data).currentKey === "backspace"){
                        if(current_cell.closest(".table").length > 0){
                            if(!current_cell.prev().hasClass('first_cell')){
                                current_cell.prev().addClass('current_cell').html("<div>_</div>");
                                current_cell.removeClass('current_cell').html("<div>.</div>");
                            }
                        } else {
                            last_cell.prev().addClass('current_cell').html("<div>_</div>");
                            last_cell.html("<div>.</div>");
                        }
                    } else {
                        current_cell.html("<div>" + JSON.parse(e.data).currentKey + "</div>")
                        if(!current_cell.hasClass('last_cell')){
                            current_cell.next().addClass('current_cell').html("<div>_</div>");
                        }
                        current_cell.toggleClass('current_cell');
                    }
                }
            }
        }

        //-- Before unload:  Unsubscribe mercure topics
        window.addEventListener('beforeunload', function () {
            if (eventSource != null) {
                eventSource.close()
            }
        })
    {% endif %}
</script>
