<!DOCTYPE html>
<html lang="fr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{% block title %}Welcome!{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" integrity="sha512-9usAa10IRO0HhonpyAIVpjrylPvoDwiPUiKdWk5t3PyolY1cOd4DSE0Ga+ri4AuTroPR5aQvXU9xC6qOPnzFeg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
        {% block stylesheets %}
            {{ encore_entry_link_tags('app') }}
        {% endblock %}
        <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk=" crossorigin="anonymous"></script>
    </head>
    <body>
        <div class="toast" role="alert" aria-live="assertive" aria-atomic="true" style="position: absolute;top: 0;right: 0">
            <div class="toast-header">
                <strong class="mr-auto">Bootstrap</strong>
                <small>11 mins ago</small>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body"></div>
        </div>
        <input type="checkbox" class="hamburger_checkbox">
        <div class="hamburger" id="hamburger">
            <span class="line"></span>
            <span class="line"></span>
            <span class="line"></span>
            <div class="notification " style="color: #0b2e13">
                <i class="fa-solid fa-bell"></i>
            </div>
        </div>
        <div class="sidenav">
            <div class="sidenav_content">
                <ul>
                    <li>
                        <i class="fa-solid fa-house"></i>
                        <a href="{{ path('accueil') }}">Accueil</a>
                    </li>
                    {% if app.user %}
                        <li>
                            <i class="fa-solid fa-user"></i>
                            <a href="{{ path('mon_profil') }}">Mon Profil</a>
                        </li>
                        <li>
                            <i class="fa-solid fa-user-group"></i>
                            <a href="{{ path('amis') }}">Amis</a>
                            <div class="notification-amis">
                                <div class="notification-amis-cloche">
                                    <i class="fa-solid fa-bell" style="color: #0b2e13"></i>
                                </div>
                            </div>
                        </li>
                    {% else %}
                        <li>
                            <i class="fa-solid fa-arrow-right-to-bracket"></i>
                            <a href="{{ path('login') }}">Connexion</a>
                        </li>
                        <li>
                            <i class="fa-solid fa-user-pen"></i>
                            <a href="{{ path('app_register') }}">Inscription</a>
                        </li>
                    {% endif %}
                    <li>
                        <i class="fa-solid fa-star"></i>
                        <a href="{{ path('classement') }}">Classement</a>
                    </li>
                    {% if app.user %}
                        <li>
                            <i class="fa-solid fa-arrow-right-from-bracket"></i>
                            <a href="{{ path('app_logout') }}">Déconnexion</a>
                        </li>
                    {% endif %}
                </ul>
            </div>
        </div>
        {% block body %}{% endblock %}
        {% block javascripts %}
            {{ encore_entry_script_tags('app') }}
            <script>
                $(document).ready(function(){
                    // Création du clavier
                    $('#keyboard').jkeyboard({
                        input: $('#search_field'),
                        layout: 'azerty',
                    });
                    // Variables de la grille de jeu
                    let id_partie;
                    let difficultee;
                    let ligne_actuelle = 0;
                    let essais = 6;
                    let n_case = 1;
                    {% if id is defined %}
                        difficultee = {{id}};
                        init_partie({{id}});
                    {% endif %}
                    // Validation de l'essai / MAJ de la ligne
                    $('.return').click(function() {
                        let mot_valide = true;
                        let mot = "";
                        $(".line_" + ligne_actuelle).each(function(){
                            mot += $(this).text();
                            if($(this).text() === "." || $(this).text() === "_"){
                                mot_valide = false;
                                return false;
                            }
                        });
                        if(!mot_valide){
                            alert('mot trop court !');
                        } else {
                            $('.last_cell').toggleClass('last_cell');
                            $.ajax({
                                method: "POST",
                                url: "{{ path('maj_ligne') }}",
                                data: {
                                    ligne_actuelle: ligne_actuelle,
                                    mot: mot,
                                    id_partie: id_partie
                                },
                                success: function(data){
                                    console.log(data)
                                    ligne_actuelle = data.essais;
                                    let numero_cellule = 1;
                                    // MAJ de la ligne précédente
                                    data.ligne_precedente.forEach(function (lettre, index) {
                                        let cellule;
                                        if(ligne_actuelle -1 === 0){
                                            cellule = $('.line_' + (ligne_actuelle - 1) +".cell_" + (index+1));
                                        }else{
                                            cellule = $('.line_' + (ligne_actuelle - 1) +".cell_" + (((ligne_actuelle - 1) * difficultee) + numero_cellule));
                                        }
                                        setTimeout(function(){
                                            if(lettre.placement === true && lettre.presence === true){
                                                if(!cellule.hasClass("valide_cell")){
                                                    cellule.addClass("valide_cell")
                                                }
                                            } else if (lettre.presence === true) {
                                                if(!cellule.hasClass("is_in_cell")){
                                                    cellule.html("<p>"+ cellule.text() +"</p>")
                                                    cellule.addClass("is_in_cell")
                                                }
                                            }
                                        }, 300);
                                        numero_cellule++;
                                    })
                                    //-- Préparation de la nouvelle ligne
                                    $('.line_' + ligne_actuelle).each(function (index) {
                                        let numero = (index + 1)  +  (difficultee * ligne_actuelle);
                                        if(index === 0){
                                            // Affichage de la première lettre
                                            $('.line_' + ligne_actuelle +".cell_" + numero)
                                            .addClass('valide_cell first_cell')
                                            .text(data.ligne_precedente[0].valeur);
                                        } else if (index === 1){
                                            // Placement du curseur
                                            $('.line_' + ligne_actuelle +".cell_" + numero)
                                            .addClass('current_cell')
                                            .text("_");
                                        } else  {
                                            $('.line_' + ligne_actuelle +".cell_" + numero).text(".");
                                        }
                                    })
                                    //-- Repérage de la dernière lettre
                                    $('.line_' + ligne_actuelle+".cell_" + ((difficultee * ligne_actuelle)+difficultee))
                                    .addClass('last_cell')
                                    //-- Mise à jour du clavier
                                    // parcours des lettres du clavier
                                    $('.jkey.letter').each(function (index,element) {
                                        let letter = element.childNodes[0].data;
                                        let array_maj_keyboard = Object.entries(data.arrayMajKeyboard);
                                        // parcours des lettres mises à jour
                                        array_maj_keyboard.forEach(([key, value]) => {
                                            if (letter === key){
                                                //Raz des classes
                                                element.classList.remove('placee')
                                                element.classList.remove('presente')
                                                element.classList.remove('absente')
                                                if(value.presence){
                                                    if(value.placement){
                                                        // position trouvée
                                                        element.classList.add('placee')
                                                    } else {
                                                        // position non trouvée
                                                        element.classList.add('presente')
                                                    }
                                                } else {
                                                    // lettre absente
                                                    element.classList.add('absente')
                                                }
                                            }
                                        })
                                    })
                                }
                            });
                        }
                    });
                    // Creation de la partie
                    function init_partie(longueur){
                        $.ajax({
                            method: "POST",
                            url: "{{ path('genere_mot') }}",
                            data: {id: longueur},
                            success: function(reponse){
                                id_partie = reponse[1];
                                difficultee = longueur;
                                creationDeLaGrille(reponse[0], difficultee);
                            }
                        });
                    }
                    // Affichage de la partie
                    function creationDeLaGrille(mot, difficultee) {
                        let box = $('.table');
                        let box_line;
                        // box.css({
                        //     "grid-template-columns":" repeat(" + difficultee + ",1fr)"
                        // })
                        $('.mot_a_trouver').append(mot);
                        for(let i = 0; i < essais; i++) {
                            box.append('<tr></tr>')
                            box_line = $('div tr:last-child');
                            for(let j = 0; j < difficultee; j++) {
                                if(i < 1 && j < 1){
                                      box_line.append('<td class="td line_' + i + ' first_cell valide_cell cell cell_'+ n_case +'">' + mot.split('')[j] + '</td>')
                                } else {
                                    if(i < 1 && j === 1){
                                         box_line.append('<td class="td line_' + i + ' current_cell cell cell_'+ n_case +'">_</td>')
                                    } else if(i < 1 && j  === (difficultee -1)){
                                          box_line.append('<td class="td line_' + i + ' cell cell_'+ n_case +' last_cell" >.</td>')
                                    } else if(i < 1 && j <= difficultee){
                                          box_line.append('<td class="td line_' + i + ' cell cell_'+ n_case +'">.</td>')
                                    } else {
                                          box_line.append('<td class="td line_' + i + ' cell cell_'+ n_case +'"></td>')
                                    }
                                }
                                n_case++;
                            }
                        }
                    }
                    //-- Notifications demandes d'amis
                    // Si l'utilisateur est connecté
                    {% if app.user %}
                        //-- Inscription a un topic mercure.
                        // Initialisation de l'Url mercure
                        const url = new URL('http://localhost:3000/.well-known/mercure')
                        // On ajoute le "topic" correspondant aux notifications de l'utilisateur courant
                        url.searchParams.append('topic','/accueil/notifications/demande_ajout/' + {{ app.user.id }})
                        // On écoute les évènements provenant de mercure
                        const eventSource = new EventSource(url)
                        eventSource.onmessage = (e) => {
                            if(JSON.parse(e.data).topic === '/accueil/notifications/demande_ajout/' + {{ app.user.id }}){
                                let toast = $('.toast');
                                $('.toast-body').html(JSON.parse(e.data).notification)
                                toast.toast({ autohide: false })
                                toast.toast('show')
                                $('.hamburger_checkbox:not(:checked) ~ .hamburger .notification').css('display','flex')
                                $('.sidenav .sidenav_content ul li .notification-amis').css('display','inline-block')
                            }
                        }
                        //-- Affichage des notifications de l'utilisateur courant
                        $.ajax({
                            // Adresse à laquelle la requête est envoyée
                            url: '{{ path('mes_notifications') }}',
                            // Le délai maximun en millisecondes de traitement de la demande
                            timeout: 4000,
                            // La fonction à apeller si la requête aboutie
                            success: function (data) {
                                if(data){
                                    $('.hamburger_checkbox:not(:checked) ~ .hamburger .notification').css('display','flex')
                                    $('.sidenav .sidenav_content ul li .notification-amis').css('display','inline-block')
                                }
                            },
                            // La fonction à appeler si la requête n'a pas abouti
                            error: function() {

                            }
                        });

                        //-- Désinscription aux topics mercure
                        window.addEventListener('beforeunload', function () {
                            if(eventSource != null){
                                eventSource.close()
                            }
                        })
                    {% endif %}
                });
            </script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        {% endblock %}
    </body>
</html>
